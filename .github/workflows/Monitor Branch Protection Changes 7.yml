name: Monitor Branch Protection Changes 7
on:
  branch_protection_rule:
    types: [created, edited, deleted]
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  check-branch-protection:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check Branch Protection Rules
        id: check-rules
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ADMIN_PAT }}
          script: |
            const repo = context.repo;
            
            try {
              // Get repository info
              console.log('Getting repository info...');
              const repoInfo = await github.rest.repos.get({
                owner: repo.owner,
                repo: repo.repo
              });
              
              const defaultBranch = repoInfo.data.default_branch;
              console.log(`Default branch is: ${defaultBranch}`);
              
              // Get current protection rules
              console.log(`Checking protection rules for ${defaultBranch}...`);
              const protection = await github.rest.repos.getBranchProtection({
                owner: repo.owner,
                repo: repo.repo,
                branch: defaultBranch
              });
              
              const currentState = JSON.stringify(protection.data, null, 2);
              console.log('Current protection rules:', currentState);
              core.setOutput('protection_rules', currentState);
              
              // Check for changes
              const previousIssue = await github.rest.issues.listForRepo({
                owner: repo.owner,
                repo: repo.repo,
                state: 'open',
                labels: 'branch-protection-state',
                per_page: 1
              });
              
              if (previousIssue.data.length > 0) {
                const previousState = previousIssue.data[0].body;
                if (previousState !== currentState) {
                  core.setOutput('changes_detected', 'true');
                }
              }
              
            } catch (error) {
              console.log('Error details:', error);
              core.setFailed(`Error: ${error.message}`);
            }

      - name: Send Slack Notification - Changes Detected
        if: steps.check-rules.outputs.changes_detected == 'true'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'C081N38PHC5'
          payload: |
            {
              "text": "üö® Branch protection rules changed in ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üö® *Branch protection rules changed!*\n\n*Repository:* ${{ github.repository }}\n*Changed by:* ${{ github.actor }}\n*Event:* ${{ github.event_name }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send Slack Notification - Error
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'C081N38PHC5'
          payload: |
            {
              "text": "‚ö†Ô∏è Error monitoring branch protection in ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "‚ö†Ô∏è *Error monitoring branch protection!*\n\n*Repository:* ${{ github.repository }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
